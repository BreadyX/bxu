#! /usr/bin/env python3
"""AUR helper"""
# import urllib.request
# import json
# import subprocess
import getopt
import sys
# import os

NAME = 'aur'
VERSION = '0.1'
SYNTAX = f'Usage: {NAME} [option]... [packages]...'
OVERVIEW = ('Simple AUR helper that can install, search and get info on '
            'packages from the AUR. Every download is kept into the ".aur" '
            "folder inside the user's home directory.")
OPTIONS = {'install'    : ('-S', '--sync', 'S',
                           "Install a package from the AUR"),
           'build'      : ('-B', '--build', 'B',
                           "Download and build a package from the AUR"),
           'get'        : ('-C', '--clone', 'C',
                           "Download the port of a package from the AUR"),
           'upgrade'    : ('-U', '--upgrade', 'U',
                           "Upgrade all installed AUR packages"),
           'info'       : ('-Q', '--info', 'Q',
                           "Get information about a package from the AUR"),
           'search'     : ('-s', '--search', 's',
                           "Search the AUR for a package"),
           'to-pacman'  : ('-', '--to-pacman=', '',
                           "Pass <options> to pacman -U "
                           "(to be used only when installing)"),
           'to-makepkg' : ('-', '--to-makepkg=', '',
                           "Pass <options> to makepkg "
                           "(to be used only when building or installing)"),
           'quiet'      : ('-q', '--quiet', '', "Print less output"),
           'verbose'    : ('-v', '--verbose', '', "Print more output"),
           'help'       : ('-h', '--help', 'H', "Print this dialog"),
           'version'    : ('-V', '--version', 'V',
                           "Print a dialog containing info about version")}

# Access OPTIONS dict without magic numers
SHORT_OPT = 0
LONG_OPT = 1
DESC_OPT = 3
ACTION = 2


def main():
    """Main function"""
    print(make_dialog('H'))


def make_dialog(typ):
    """Construct help and version dialogs"""
    dialog = ''
    if typ == OPTIONS['help'][ACTION]:
        # add syntax
        dialog += SYNTAX + '\n\t' + OVERVIEW
        # add description
        # add options
    elif typ == OPTIONS['version'][ACTION]:
        dialog = (f'{NAME} - BreadyX\'s utils. Version {VERSION}.'
                  '\tWritten bt BreadyX.\n\tContacts:\n'
                  '\thttps://github.com/BreadyX/bxu')
    else:
        raise RuntimeError(f'Invalid type {typ}')
    return dialog


if __name__ == '__main__':
    try:
        main()
    except RuntimeError as err:
        print(f'\033[31mError: {str(err)}.\033[0m\n'
              f'Use {NAME} {OPTIONS["help"][LONG_OPT]} for info on usage.')
