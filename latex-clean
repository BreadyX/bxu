#!/bin/bash
#
# File: latex-clean
# Version: 4.2019.0
# Author: BreadyX
#
# Cleans the folder of any junk files leaved behind by pdflatex

### FLAGS
VERSION="4.2019.0" # Version of the script

RECURSIVE=0				# Sets if it should operate recoursively
EXTENSIONS="aux|log|ps|tex~|bbl|blg"	# Extension schema, used later in a grep

# Help dialog text
HELP_DIALOG=$(cat << EOF
latex-clear [OPTIONS]

Cleans the folder of any junk files leaved behind by pdflatex or by any other
LaTeX compiler

OPTIONS:
    --extensions [SCHEMA]       Extensions to delete separated by | (e.g. "aux|log")
                                If option not specified, latex-clean will use 
                                a default set of extensions: "$EXTENSIONS"
    --recursive                 Recurse into subfolders
    --help                      Show this dialog
    --version                   Show a dialog detailing information about the version
EOF
)
# Version dialog text
VERSION_DIALOG=$(cat << EOF
latex-clear - Part of BreadyX's utils (BXU)

This program has been written by BreadyX, contacts (for bug reports and other):
    Github profile:     https://github.com/BreadyX
    GitHub repo (BXU):  https://github.com/BreadyX/bxu
    E-mail:             alex.bradatan85@gmail.com 

Current version: $VERSION
EOF
)


### FUNCTIONS
# pretty prints errors
function print_error {
    local RED=$(tput setaf 1)
    local RESET=$(tput sgr0)
    echo "$RESET$RED$1$RESET"
}

# Heart of the program, checks for file extension with regexp (grep) and removes file.
# It can also operate recursively if RECURSIVE flag is set
function _remove {
    for file in ./*; do
        if (echo "$file" | grep -Eq ".*\.($EXTENSIONS)") ; then
            if ! [ -w "$file" ]; then
                print_error "The user cannot delete file $file"
                continue
            fi
            echo "Removing $file"
            rm "$file"
        fi
    done
    if [ $RECURSIVE -eq 1 ]; then
        for dir in ./*; do
            if [ -d "$dir" ]; then
                (
                cd "$dir" || exit
                _remove
                )
            fi
        done
    fi
}

### SCRIPTS
# loop that evaluates cmd args. It only checks of long option (double-dash) without
# equal (--option=value)
while [ $# -gt 0 ]; do
    case $1 in
        "--help")
            echo "$HELP_DIALOG"
            exit 0
            ;;
        "--version")
            echo "$VERSION_DIALOG"
            exit 0
            ;;
        "--extensions")
			# Trim input of pending | to increase security: laeving a trailing |
			# means that every file is elegible for deletion, and that's not good.
			# It also trims whitespaces just in case.
            EXTENSIONS=$(echo $2 | sed 's/^|*//;s/|*$//' | sed 's/^[ \t]*//;s/[ \t]*$//')
            shift 2
            ;;
        "--recursive")
            RECURSIVE=1
            shift
            ;;
        "")
            shift
            ;;
        *)
            print_error "Invalid arguments, please see latex-clean --help for help with usage"
            exit 1
            ;;
    esac
done

# calls "main" function after cmd args evaluation
_remove
